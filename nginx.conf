daemon off;
worker_processes 1;
user root;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any; # Heroku router sends Via header

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log /var/log/nginx/access.log l2met;
	error_log  /var/log/nginx/error.log warn;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream streamlit {
		server unix:/tmp/streamlit.sock fail_timeout=0;
	}

	server {
		listen 80;
		server_name localhost;
		keepalive_timeout 5;

		location / {
			# Uncomment this if statement to force SSL/redirect http -> https
			# if ($http_x_forwarded_proto != "https") {
			#   return 301 https://$host$request_uri;
			# }

			# Uncomment this to force HTTP Basic Auth
 			# auth_basic "Restricted area";
            # auth_basic_user_file /streamlit/.htpasswd;

            proxy_buffers 8 8k;
            proxy_buffer_size 8k;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_http_version 1.1;
			proxy_pass http://streamlit;
		}

        index index.php index.html index.htm;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
           root /usr/share/nginx/html;
        }
	}

	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    '' close;
	}
}